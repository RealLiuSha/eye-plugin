#!/usr/bin/env python
# coding=utf-8
# Create By Freedie.liu
import os

from libs import rest
from optparse import OptionParser


def metrics(opts):
    for key in opts.keys():
        if opts.get(key): continue
        raise RuntimeError("%s is required!" % key)

    if not os.path.exists(opts["dirpath"]) or not os.path.isdir(opts["dirpath"]):
        raise RuntimeError("%s not found!" % opts["dirpath"])

    filecount = len([n for n in os.listdir(opts["dirpath"]) if os.path.isfile(os.path.join(opts["dirpath"], n))])
    return [rest.metric(filecount, opts["metric"], tags="type=plugin")]


def main():
    op = OptionParser("%s <Options>" % __file__)
    op.add_option("--metric", action="store", type="string", help="metrics name")
    op.add_option("--dirpath", action="store", type="string", help="need to count the absolute pathname")

    options, _ = op.parse_args()
    return metrics(options.__dict__)


if __name__ == '__main__':
    try:
        rest.stdout_write(main())
    except Exception as e:
        rest.stderr_write(e)

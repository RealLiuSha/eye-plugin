#!/usr/bin/env python
# coding=utf-8
# Create By Freedie.liu
import os

from libs import rest
from optparse import OptionParser


def metrics(opts):
    for key in opts.keys():
        if opts.get(key): continue
        raise RuntimeError("%s is required!" % key)

    if not os.path.exists(opts["filepath"]) or not os.path.isfile(opts["filepath"]):
        raise RuntimeError("%s not found!" % opts["filepath"])

    return [rest.metric(os.path.getsize(opts["filepath"]), opts["metric"], tags="type=plugin")]


def main():
    op = OptionParser("%s <Options>" % __file__)
    op.add_option("--metric", action="store", type="string", help="metrics name")
    op.add_option("--filepath", action="store", type="string", help="need to count the absolute pathname")

    options, _ = op.parse_args()
    return metrics(options.__dict__)


if __name__ == '__main__':
    try:
        rest.stdout_write(main())
    except Exception as e:
        rest.stderr_write(e)

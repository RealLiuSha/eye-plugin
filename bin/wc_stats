#!/usr/bin/env python
# coding=utf-8
# Create By Freedie.liu
import os

from libs import rest
from optparse import OptionParser


def metrics(opts, count=0):
    for key in opts.keys():
        if opts.get(key): continue
        raise RuntimeError("%s is required!" % key)

    if not os.path.exists(opts["filepath"]):
        return {}

    with open(opts["filepath"], "r") as f:
        for l in f: count += l.count(opts["keyword"])

    return [rest.metric(count, opts["metric"], tags="type=plugin")]


def main():
    op = OptionParser("%s <Options>" % __file__)
    op.add_option("--filepath", action="store", type="string", help="need to count the absolute pathname")
    op.add_option("--keyword", action="store", type="string", help="need to count the keyword")
    op.add_option("--metric", action="store", type="string", help="metrics name")

    options, _ = op.parse_args()
    return metrics(options.__dict__)


if __name__ == '__main__':
    try:
        rest.stdout_write(main())
    except Exception as e:
        rest.stderr_write(e)

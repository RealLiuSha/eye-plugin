#!/usr/bin/env python
# coding=utf-8
# Create By Freedie.liu
import re

from libs import rest
from optparse import OptionParser


def metrics(opts):
    for key in opts.keys():
        if opts.get(key): continue
        raise RuntimeError("%s is required!" % key)

    chuanglan_url = "http://sdk999ws.eucp.b2m.cn:8080/sdkproxy/querybalance.action?cdkey={cdkey}&password={password}"
    chuanglan_balance_data = rest.get(chuanglan_url.format(cdkey=opts["cdkey"], password=opts["password"]), max_age=-1)

    try:
        return [rest.metric(
            re.search("<message>(.*)</message>", chuanglan_balance_data.text).groups()[0],
            "sms.chuanglan_margin", tags="type=plugin"
        )]
    except Exception:
        raise RuntimeError("get data failed!")


def main():
    op = OptionParser("%s <Options>" % __file__)
    op.add_option("--password", action="store", type="string", help="monitor app password")
    op.add_option("--cdkey", action="store", type="string", help="monitor app cdkey")

    options, _ = op.parse_args()
    return metrics(options.__dict__)


if __name__ == '__main__':
    try:
        rest.stdout_write(main())
    except Exception as e:
        rest.stderr_write(e)
